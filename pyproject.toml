[project]
name = "tensorboard-reducer"
version = "0.3.1"
description = "Reduce multiple TensorBoard runs to new event (or CSV) files"
authors = [{ name = "Janosh Riebesell", email = "janosh.riebesell@gmail.com" }]
license = { file = "license" }
readme = "readme.md"
keywords = [
  "aggregate",
  "averaging",
  "logs",
  "machine-learning",
  "pytorch",
  "reducer",
  "runs",
  "statistics",
  "tensorboard",
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
]
requires-python = ">=3.8"
dependencies = [
  "numpy >= 1.19",
  "pandas >= 1.0.0",
  "tensorboard >= 2.0",
  "tqdm >= 4.0",
]

[project.urls]
Homepage = "https://github.com/janosh/tensorboard-reducer"
Package = "https://pypi.org/project/tensorboard-reducer"

[project.optional-dependencies]
test = ["pytest", "pytest-cov", "torch >= 1.6"]
excel = ["openpyxl"]

[project.scripts]
tb-reducer = "tensorboard_reducer:main"

[tool.setuptools.packages]
find = { include = ["tensorboard_reducer*"], exclude = ["tests*"] }

[tool.distutils.bdist_wheel]
universal = true

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "-p no:warnings"

[tool.mypy]
check_untyped_defs = true
disallow_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
warn_redundant_casts = true
warn_unused_ignores = true

[tool.ruff]
target-version = "py38"
include = ["**/pyproject.toml", "*.ipynb", "*.py", "*.pyi"]
select = [
  "B",    # flake8-bugbear
  "C4",   # flake8-comprehensions
  "D",    # pydocstyle
  "E",    # pycodestyle error
  "EXE",  # flake8-executable
  "F",    # pyflakes
  "FA",   # flake8-future-annotations
  "FLY",  # flynt
  "I",    # isort
  "ICN",  # flake8-import-conventions
  "ISC",  # flake8-implicit-str-concat
  "PD",   # pandas-vet
  "PERF", # perflint
  "PIE",  # flake8-pie
  "PL",   # pylint
  "PT",   # flake8-pytest-style
  "PYI",  # flakes8-pyi
  "Q",    # flake8-quotes
  "RET",  # flake8-return
  "RSE",  # flake8-raise
  "RUF",  # Ruff-specific rules
  "SIM",  # flake8-simplify
  "SLOT", # flake8-slots
  "TCH",  # flake8-type-checking
  "TID",  # tidy imports
  "UP",   # pyupgrade
  "W",    # pycodestyle warning
  "YTT",  # flake8-2020
]
ignore = [
  "D100",  # Missing docstring in public module
  "D205",  # 1 blank line required between summary line and description
  "PLR",   # pylint refactor
  "PT006", # pytest-parametrize-names-wrong-type
]
pydocstyle.convention = "google"

[tool.ruff.per-file-ignores]
"tests/*" = ["D103", "D104"]
"__init__.py" = ["F401"]
"examples/*" = ["D102", "D103", "D107", "E402", "FA102"]
